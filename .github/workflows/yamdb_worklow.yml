name: NKO_BOT

on: [push]

jobs:
  tests: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
        

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub 
        uses: docker/build-push-action@v2 
        with: 
           context: .
           file: Dockerfile  
           push: true 
           tags: ${{ secrets.DOCKER_USERNAME }}/bot:latest
      - name: Push backend to Docker Hub 
        uses: docker/build-push-action@v2 
        with: 
           context:  .
           file: Dockerfile
           push: true 
           tags: ${{ secrets.DOCKER_USERNAME }}/admin:latest
        


  deploy: 
     runs-on: ubuntu-latest 
     needs: build_and_push_to_docker_hub 
     steps: 
       - name: executing remote ssh command to deploy 
         uses: appleboy/ssh-action@master 
         with: 
           host: ${{ secrets.HOST }} 
           username: ${{ secrets.USER }} 
           key: ${{ secrets.SSH_KEY }} 
           passphrase: ${{ secrets.PASSPHRASE }} 
           script: | 
            sudo docker-compose stop 
            sudo docker-compose rm bot
            sudo docker-compose rm admin 
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/bot:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/admin:latest
            sudo touch .env
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
            echo MONGO_HOST=${{ secrets.MONGO_HOST }} >> .env
            echo MONGO_PORT=${{ secrets.MONGO_PORT }} >> .env
            echo LOGLEVEL=${{ secrets.LOGLEVEL }} >> .env
            echo LOG=${{ secrets.LOG }} >> .env
            echo SECRET=${{ secrets.SECRET }} >> .env
            echo ADMIN=${{ secrets.ADMIN }} >> .env
            echo PASS=${{ secrets.PASS }} >> .env
            echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
            echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
            sudo docker compose up -d --build